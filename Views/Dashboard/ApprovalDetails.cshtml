@model StudentEnrollmentSystem.Models.EnrollmentBatch
@{
    ViewData["Title"] = "Approval Details";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2><i class="bi bi-clipboard-check"></i> Enrollment Batch Approval Details</h2>
    <div>
        <a asp-action="PendingApprovals" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
        <button onclick="window.print()" class="btn btn-outline-secondary">
            <i class="bi bi-printer"></i> Print
        </button>
    </div>
</div>
<hr />

<div class="alert alert-info mb-4">
    <div class="row">
        <div class="col-md-6">
            <strong><i class="bi bi-hash"></i> Batch ID:</strong> @Model.Id
        </div>
        <div class="col-md-6 text-end">
            <strong><i class="bi bi-calendar"></i> Submitted:</strong> @Model.SubmittedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card h-100 border-primary">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="bi bi-person"></i> Student Information</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-4"><i class="bi bi-person-badge"></i> Name:</dt>
                    <dd class="col-sm-8"><strong>@Model.Student.FullName</strong></dd>

                    <dt class="col-sm-4"><i class="bi bi-hash"></i> Student ID:</dt>
                    <dd class="col-sm-8"><code>@Model.Student.StudentNumber</code></dd>

                    <dt class="col-sm-4"><i class="bi bi-building"></i> Department:</dt>
                    <dd class="col-sm-8"><span class="badge bg-info">@(Model.Student.Department?.Name ?? "Not Assigned")</span></dd>

                    <dt class="col-sm-4"><i class="bi bi-envelope"></i> Email:</dt>
                    <dd class="col-sm-8"><a href="mailto:@Model.Student.Email">@Model.Student.Email</a></dd>
                </dl>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card h-100 border-success">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0"><i class="bi bi-book"></i> Batch Information</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-4"><i class="bi bi-calendar3"></i> Semester:</dt>
                    <dd class="col-sm-8"><strong>@Model.Semester @Model.AcademicYear</strong></dd>

                    <dt class="col-sm-4"><i class="bi bi-journal-text"></i> Total Courses:</dt>
                    <dd class="col-sm-8"><span class="badge bg-primary">@Model.Enrollments.Count courses</span></dd>

                    <dt class="col-sm-4"><i class="bi bi-star"></i> Total Credits:</dt>
                    <dd class="col-sm-8"><span class="badge bg-warning text-dark">@Model.TotalCredits Credits</span></dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-12">
        <div class="card border-info">
            <div class="card-header bg-info text-white">
                <h5 class="mb-0"><i class="bi bi-list-ul"></i> Courses in This Batch</h5>
            </div>
            <div class="card-body">
                @if (Model.Enrollments.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped mb-0">
                            <thead>
                                <tr>
                                    <th>Course Code</th>
                                    <th>Course Name</th>
                                    <th>Department</th>
                                    <th>Credits</th>
                                    <th>Capacity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var enrollment in Model.Enrollments.OrderBy(e => e.Course.CourseCode))
                                {
                                    <tr>
                                        <td><strong>@enrollment.Course.CourseCode</strong></td>
                                        <td>@enrollment.Course.Name</td>
                                        <td><span class="badge bg-info">@(enrollment.Course.Department ?? "N/A")</span></td>
                                        <td><span class="badge bg-warning text-dark">@enrollment.Course.Credits</span></td>
                                        <td>@enrollment.Course.EnrolledCount / @enrollment.Course.Capacity students</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <p class="text-muted mb-0">No courses in this batch.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col-md-12">
        <div class="card border-warning">
            <div class="card-header bg-warning">
                <h5 class="mb-0"><i class="bi bi-info-circle"></i> Enrollment Batch Status</h5>
            </div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-sm-3"><i class="bi bi-flag"></i> Current Status:</dt>
                    <dd class="col-sm-9">
                        @if (Model.Status == StudentEnrollmentSystem.Models.Enums.EnrollmentStatus.Enrolled)
                        {
                            <h4><span class="badge bg-success"><i class="bi bi-check-circle"></i> @Model.Status</span></h4>
                        }
                        else if (Model.Status == StudentEnrollmentSystem.Models.Enums.EnrollmentStatus.Rejected)
                        {
                            <h4><span class="badge bg-danger"><i class="bi bi-x-circle"></i> @Model.Status</span></h4>
                        }
                        else
                        {
                            <h4><span class="badge bg-warning"><i class="bi bi-hourglass-split"></i> @Model.Status</span></h4>
                        }
                    </dd>

                    <dt class="col-sm-3"><i class="bi bi-calendar-check"></i> Submitted:</dt>
                    <dd class="col-sm-9">@Model.SubmittedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")</dd>

                    @if (Model.CompletedDate.HasValue)
                    {
                        <dt class="col-sm-3"><i class="bi bi-calendar-check-fill"></i> Completed:</dt>
                        <dd class="col-sm-9">@Model.CompletedDate.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")</dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.StudentComments))
                    {
                        <dt class="col-sm-3"><i class="bi bi-chat-left-text"></i> Student Comments:</dt>
                        <dd class="col-sm-9">
                            <div class="alert alert-light mb-0">
                                <em>"@Model.StudentComments"</em>
                            </div>
                        </dd>
                    }
                </dl>
            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Accounting") || User.IsInRole("Admin"))
{
    var enrollmentPayment = ViewBag.EnrollmentPayment as StudentEnrollmentSystem.Models.EnrollmentPayment;

    @if (enrollmentPayment != null)
    {
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="card @(enrollmentPayment.MeetsRequirement ? "border-success" : "border-danger")">
                    <div class="card-header @(enrollmentPayment.MeetsRequirement ? "bg-success" : "bg-danger") text-white">
                        <h5 class="mb-0">
                            <i class="bi bi-cash-coin"></i> Payment/Promissory Note Information
                            @if (enrollmentPayment.MeetsRequirement)
                            {
                                <span class="badge bg-light text-success float-end"><i class="bi bi-check-circle"></i> Requirement Met</span>
                            }
                            else
                            {
                                <span class="badge bg-light text-danger float-end"><i class="bi bi-x-circle"></i> Requirement Not Met</span>
                            }
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (enrollmentPayment.UsingPromissoryNote && enrollmentPayment.PromissoryNote != null)
                        {
                            <div class="alert alert-warning">
                                <h6><i class="bi bi-file-earmark-text"></i> Student Using Promissory Note</h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <p><strong>Amount Covered:</strong> â‚±@enrollmentPayment.PromissoryNote.AmountCovered.ToString("N2")</p>
                                        <p><strong>Repayment Deadline:</strong> @enrollmentPayment.PromissoryNote.RepaymentDeadline.ToString("MMMM dd, yyyy")</p>
                                        <p><strong>Status:</strong> <span class="badge bg-success">@enrollmentPayment.PromissoryNote.Status.ToString()</span></p>
                                    </div>
                                    <div class="col-md-6">
                                        <p><strong>Reviewed By:</strong> @(enrollmentPayment.PromissoryNote.ReviewedByCampusDirector?.FullName ?? "N/A")</p>
                                        <p><strong>Review Date:</strong> @(enrollmentPayment.PromissoryNote.ReviewedDate?.ToString("MMMM dd, yyyy") ?? "N/A")</p>
                                        @if (!string.IsNullOrEmpty(enrollmentPayment.PromissoryNote.Reason))
                                        {
                                            <p><strong>Student's Reason:</strong></p>
                                            <div class="border rounded p-2 bg-light">
                                                <small>@enrollmentPayment.PromissoryNote.Reason</small>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        else if (enrollmentPayment.Payment != null)
                        {
                            <div class="alert alert-success">
                                <h6><i class="bi bi-cash"></i> Payment Information</h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <p><strong>Amount Paid:</strong> <span class="text-success fs-5">â‚±@enrollmentPayment.AmountPaid.ToString("N2")</span></p>
                                        <p><strong>Student Balance:</strong> â‚±@enrollmentPayment.StudentBalance.ToString("N2")</p>
                                        <p><strong>Payment Percentage:</strong> <span class="badge bg-@(enrollmentPayment.PaymentPercentage >= 30 ? "success" : "danger") fs-6">@enrollmentPayment.PaymentPercentage.ToString("F1")%</span></p>
                                    </div>
                                    <div class="col-md-6">
                                        <p><strong>Payment Method:</strong> @enrollmentPayment.Payment.PaymentMethod.ToString()</p>
                                        <p><strong>Reference Number:</strong> <code>@enrollmentPayment.Payment.ReferenceNumber</code></p>
                                        <p><strong>Payment Date:</strong> @enrollmentPayment.Payment.PaymentDate.ToString("MMMM dd, yyyy hh:mm tt")</p>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col-md-12">
                                @if (enrollmentPayment.PaymentPercentage >= 30 || enrollmentPayment.UsingPromissoryNote)
                                {
                                    <div class="alert alert-success mb-0">
                                        <i class="bi bi-check-circle"></i> <strong>Payment requirement satisfied.</strong>
                                        @if (enrollmentPayment.UsingPromissoryNote)
                                        {
                                            <span>Campus Director has approved the promissory note.</span>
                                        }
                                        else
                                        {
                                            <span>Student has paid @enrollmentPayment.PaymentPercentage.ToString("F1")% of their balance (â‰¥30% required).</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-danger mb-0">
                                        <i class="bi bi-exclamation-triangle"></i> <strong>Payment requirement NOT satisfied.</strong>
                                        Student has only paid @enrollmentPayment.PaymentPercentage.ToString("F1")% of their balance. Minimum 30% required.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

<div class="row mt-3">
    <div class="col-md-12">
        <div class="card border-secondary">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0"><i class="bi bi-list-check"></i> Approval History & Workflow</h5>
            </div>
            <div class="card-body">
                @if (Model.ApprovalSteps.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th width="5%">#</th>
                                    <th width="20%"><i class="bi bi-diagram-3"></i> Step</th>
                                    <th width="15%"><i class="bi bi-flag"></i> Status</th>
                                    <th width="20%"><i class="bi bi-person"></i> Approver</th>
                                    <th width="20%"><i class="bi bi-clock"></i> Action Date</th>
                                    <th width="20%"><i class="bi bi-chat"></i> Comments</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int stepNumber = 1; }
                                @foreach (var step in Model.ApprovalSteps.OrderBy(a => a.CreatedDate))
                                {
                                    <tr class="@(step.Status == StudentEnrollmentSystem.Models.Enums.ApprovalStatus.Approved ? "table-success" : step.Status == StudentEnrollmentSystem.Models.Enums.ApprovalStatus.Rejected ? "table-danger" : "")">
                                        <td><strong>@stepNumber</strong></td>
                                        <td>
                                            <strong>@step.StepType</strong>
                                        </td>
                                        <td>
                                            @if (step.Status == StudentEnrollmentSystem.Models.Enums.ApprovalStatus.Approved)
                                            {
                                                <span class="badge bg-success"><i class="bi bi-check-circle-fill"></i> @step.Status</span>
                                            }
                                            else if (step.Status == StudentEnrollmentSystem.Models.Enums.ApprovalStatus.Rejected)
                                            {
                                                <span class="badge bg-danger"><i class="bi bi-x-circle-fill"></i> @step.Status</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning"><i class="bi bi-hourglass-split"></i> @step.Status</span>
                                            }
                                        </td>
                                        <td>
                                            @if (step.Approver != null)
                                            {
                                                <i class="bi bi-person-check-fill"></i> @step.Approver.FullName
                                            }
                                            else
                                            {
                                                <em class="text-muted">Awaiting approval...</em>
                                            }
                                        </td>
                                        <td>
                                            @if (step.ActionDate.HasValue)
                                            {
                                                <small>@step.ActionDate.Value.ToString("MMM dd, yyyy")<br />@step.ActionDate.Value.ToString("hh:mm tt")</small>
                                            }
                                            else
                                            {
                                                <em class="text-muted">-</em>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(step.Comments))
                                            {
                                                <small>@step.Comments</small>
                                            }
                                            else
                                            {
                                                <em class="text-muted">No comments</em>
                                            }
                                        </td>
                                    </tr>
                                    stepNumber++;
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info mb-0">
                        <i class="bi bi-info-circle"></i> No approval steps have been initiated yet.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (ViewBag.CanApprove)
{
    <div class="row mt-3">
        <div class="col-md-12">
            <div class="card border-primary shadow">
                <div class="card-header bg-gradient text-white" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <h4 class="mb-0"><i class="bi bi-hand-thumbs-up"></i> Take Action - @ViewBag.UserRole Review</h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i> <strong>Important:</strong> Your decision will affect the entire enrollment batch. Please review all information carefully before taking action.
                    </div>

                    <form asp-action="ProcessApproval" method="post" id="approvalForm">
                        <input type="hidden" name="EnrollmentBatchId" value="@Model.Id" />

                        <div class="mb-4">
                            <label for="Comments" class="form-label">
                                <i class="bi bi-chat-left-text"></i> <strong>Comments / Notes</strong>
                            </label>
                            <textarea name="Comments" id="Comments" class="form-control form-control-lg" rows="4"
                                      placeholder="Enter your review comments here... (optional)"></textarea>
                            <div class="form-text">Add any relevant notes or reasons for your decision.</div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex">
                            <button type="submit" name="IsApproved" value="true" class="btn btn-success btn-lg flex-fill" onclick="return confirm('Are you sure you want to APPROVE this enrollment batch?')">
                                <i class="bi bi-check-circle-fill"></i> Approve Enrollment Batch
                            </button>
                            <button type="submit" name="IsApproved" value="false" class="btn btn-danger btn-lg flex-fill" onclick="return confirm('Are you sure you want to REJECT this enrollment batch? This action will end the approval workflow.')">
                                <i class="bi bi-x-circle-fill"></i> Reject Enrollment Batch
                            </button>
                            <a asp-action="PendingApprovals" class="btn btn-secondary btn-lg">
                                <i class="bi bi-arrow-left"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row mt-3">
        <div class="col-md-12">
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> You cannot take action on this enrollment batch at this time. It may have already been processed or is awaiting approval from another department.
            </div>
        </div>
    </div>
}
