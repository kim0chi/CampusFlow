@model List<StudentEnrollmentSystem.Models.PromissoryNote>
@{
    ViewData["Title"] = "Pending Promissory Notes";
}

<div class="container mt-4">
    <h2><i class="bi bi-file-earmark-check"></i> Pending Promissory Notes</h2>
    <p class="text-muted">Review and approve/reject student promissory note applications</p>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-header bg-warning">
            <h5 class="mb-0"><i class="bi bi-list-check"></i> Promissory Notes Requiring Review (@Model.Count)</h5>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Submitted</th>
                                <th>Student</th>
                                <th>Course</th>
                                <th>Amount</th>
                                <th>Repayment By</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var note in Model)
                            {
                                <tr>
                                    <td>
                                        <small>@note.SubmittedDate.ToLocalTime().ToString("MMM dd, yyyy")</small>
                                    </td>
                                    <td>
                                        <strong>@note.Student.StudentNumber</strong><br>
                                        <small class="text-muted">@note.Student.FullName</small>
                                    </td>
                                    <td>
                                        @{
                                            var firstCourse = note.EnrollmentBatch.Enrollments.FirstOrDefault();
                                            var courseCount = note.EnrollmentBatch.Enrollments.Count;
                                        }
                                        @if (firstCourse != null)
                                        {
                                            <strong>@firstCourse.Course.CourseCode</strong>
                                            @if (courseCount > 1)
                                            {
                                                <span class="badge bg-primary">+@(courseCount - 1) more</span>
                                            }
                                            <br>
                                            <small class="text-muted">@courseCount course(s), @note.EnrollmentBatch.TotalCredits credits</small>
                                        }
                                    </td>
                                    <td>
                                        <strong class="text-danger">â‚±@note.AmountCovered.ToString("N2")</strong>
                                    </td>
                                    <td>
                                        @{
                                            var daysUntilDeadline = (note.RepaymentDeadline - DateTime.UtcNow).Days;
                                            var deadlineClass = daysUntilDeadline < 30 ? "text-danger" : "text-muted";
                                        }
                                        <span class="@deadlineClass">
                                            @note.RepaymentDeadline.ToString("MMM dd, yyyy")<br>
                                            <small>(@daysUntilDeadline days)</small>
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge bg-warning">@note.Status.ToString()</span>
                                    </td>
                                    <td>
                                        <a asp-action="Review" asp-route-id="@note.Id" class="btn btn-sm btn-primary">
                                            <i class="bi bi-eye"></i> Review
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> No pending promissory notes at this time.
                </div>
            }
        </div>
    </div>

    <div class="mt-3">
        <a asp-controller="Dashboard" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>
